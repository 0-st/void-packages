# Build template for 'kernel-snapshot'. To test the latest and greatest
# kernel available from www.kernel.org.
. ${XBPS_SRCPKGDIR}/kernel/template

# Override required vars.
pkgname=kernel-snapshot
#revision=1
_kernel_snapshot=yes
_kernel_ver=2.6.33
#_kernel_patch_ver=rc8
#version=${_kernel_ver}${_kernel_patch_ver}
#wrksrc="linux-${_kernel_ver}-${_kernel_patch_ver}"
#distfiles="${KERNEL_SITE}/kernel/v2.6/testing/linux-${_kernel_ver}-${_kernel_patch_ver}.tar.bz2"
version=${_kernel_ver}
wrksrc=linux-${version}
distfiles="${KERNEL_SITE}/kernel/v2.6/linux-${_kernel_ver}.tar.bz2"
checksum=63e237de3b3c4c46a21833b9ce7e20574548d52dabbd1a8bf376041e4455d5c6
subpackages="$pkgname-firmware $pkgname-headers"

# Reset some stuff.
unset _kernel_patch_ver build_depends run_depends

Add_dependency run ${pkgname}-firmware	">=${version}"
Add_dependency run initramfs-tools
Add_dependency build perl
Add_dependency full coreutils
Add_dependency full module-init-tools

post_install()
{
	#if [ -n "${revision}" ]; then
	#	lver="${_kernel_ver}-${_kernel_patch_ver}_${revision}"
	#else
	#	lver="${_kernel_ver}-${_kernel_patch_ver}"
	#fi

	mv ${DESTDIR}/lib/firmware ${DESTDIR}/firmware
	mkdir -p ${DESTDIR}/lib/firmware
	mv ${DESTDIR}/firmware ${DESTDIR}/lib/firmware/${version}
}
