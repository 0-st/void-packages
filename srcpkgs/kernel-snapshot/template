# Build template for 'kernel-snapshot'. To test the latest and greatest
# kernel available from www.kernel.org.
. ${XBPS_SRCPKGDIR}/kernel/template

# Override required vars.
pkgname=kernel-snapshot
#revision=1
_kernel_snapshot=yes
_kernel_ver=2.6.34
_kernel_patch_ver=rc4
version=${_kernel_ver}${_kernel_patch_ver}
wrksrc="linux-${_kernel_ver}-${_kernel_patch_ver}"
distfiles="${KERNEL_SITE}/kernel/v2.6/testing/linux-${_kernel_ver}-${_kernel_patch_ver}.tar.bz2"
#version=${_kernel_ver}
#wrksrc=linux-${version}
#distfiles="${KERNEL_SITE}/kernel/v2.6/linux-${_kernel_ver}.tar.bz2"
checksum=c41d2c48317c0a4fa0665c95df9b4ce510797fcf7088e55c64c610d1f40e09ba
subpackages="$pkgname-firmware $pkgname-headers"

# Reset some stuff.
unset triggers build_depends run_depends

Add_dependency run ${pkgname}-firmware	">=${version}"
Add_dependency run initramfs-tools
Add_dependency build perl
Add_dependency full coreutils
Add_dependency full module-init-tools

post_install()
{
	if [ -n "${revision}" ]; then
		lver="${_kernel_ver}-${_kernel_patch_ver}_${revision}"
	else
		lver="${_kernel_ver}-${_kernel_patch_ver}"
	fi

	mv ${DESTDIR}/lib/firmware ${DESTDIR}/firmware
	mkdir -p ${DESTDIR}/lib/firmware
	mv ${DESTDIR}/firmware ${DESTDIR}/lib/firmware/${lver}
}
