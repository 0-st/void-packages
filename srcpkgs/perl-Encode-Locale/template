# Template build file for 'perl-Encode-Locale'.
pkgname=perl-Encode-Locale
version=1.02
noarch=yes
wrksrc="Encode-Locale-$version"
distfiles="${CPAN_SITE}/Encode/Encode-Locale-$version.tar.gz"
build_style=perl-module
short_desc="Encode::Locale - Determine the locale encoding"
maintainer="davehome <davehome@redthumb.info.tm>"
homepage="http://search.cpan.org/~gaas/Encode-Locale-1.02/lib/Encode/Locale.pm"
license="GPL-2"
checksum=20c5ba2ab0ac00f0e6d5c5d405f2ccb3fdb0212de3519ec8d16688574d8d5340
long_desc="
 In many applications it's wise to let Perl use Unicode for the strings it
 processes. Most of the interfaces Perl has to the outside world is still byte
 based. Programs therefore needs to decode byte strings that enter the program
 from the outside and encode them again on the way out.
 
 The POSIX locale system is used to specify both the language conventions
 requested by the user and the preferred character set to consume and output.
 The Encode::Locale module looks up the charset and encoding (called a
 CODESET in the locale jargon) and arrange for the Encode module to know this
 encoding under the name locale. It means bytes obtained from the environment
 can be converted to Unicode strings by calling Encode::encode(locale =>
 $bytes) and converted back again with Encode::decode(locale => $string)."

Add_dependency full perl
