# Template build file for 'bash'.
pkgname=bash
_bash_patchlevel=024
_bash_distver=4.2
version=${_bash_distver}.${_bash_patchlevel}
#version=${_bash_distver}
wrksrc=${pkgname}-${_bash_distver}
distfiles="http://ftp.gnu.org/gnu/bash/bash-${_bash_distver}.tar.gz"
build_style=gnu-configure
configure_args="--without-bash-malloc --with-curses --bindir=/bin
--enable-array-variables --enable-brace-expansion --enable-casemod-attributes
--enable-casemod-expansions --enable-command-timing --enable-cond-command
--enable-cond-regexp --enable-coprocesses --enable-debugger
--enable-directory-stack --enable-dparen-arithmetic --enable-extended-glob
--enable-help-builtin --enable-history --enable-job-control --enable-multibyte
--enable-process-substitution --enable-progcomp --enable-prompt-string-decoding
--enable-select --enable-net-redirections --enable-restricted --enable-readline
--with-installed-readline"
short_desc="The GNU Bourne Again Shell"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.gnu.org/software/bash/bash.html"
license="GPL-3"
checksum=a27a1179ec9c0830c65c6aa5d7dab60f7ce1a2a608618570f96bfa72e95ab3d8
long_desc="
 Bash is an sh-compatible shell that incorporates useful features from
 the Korn shell (ksh) and C shell (csh). It is intended to conform to
 the IEEE POSIX P1003.2/ISO 9945.2 Shell and Tools standard.

 It offers functional improvements over sh for both programming and
 interactive use; these include command line editing, unlimited size
 command history, job control, shell functions and aliases, indexed
 arrays of unlimited size, and integer arithmetic in any base from two
 to sixty-four. In addition, most sh scripts can be run by Bash without
 modification."

register_shell="/bin/bash"

Add_dependency build readline-devel
Add_dependency build ncurses-devel
Add_dependency build bison

pre_configure() {
	local url="http://ftp.gnu.org/gnu/bash/bash-${_bash_distver}-patches"
	local ver=$(echo ${_bash_distver}|sed "s|\.||g")

	if [ "${_bash_patchlevel}" -gt 000 ]; then
		cd ${XBPS_SRCDISTDIR} || return 1
		for p in $(seq -w 001 ${_bash_patchlevel}); do
			[ -f ${XBPS_SRCDISTDIR}/bash${ver}-${p} ] && continue
			msg_normal " Fetching ${url}/bash${ver}-$p ...\n"
			$XBPS_FETCH_CMD ${url}/bash${ver}-$p
		done
	fi
	cd ${wrksrc}
	for p in $(seq -w 001 ${_bash_patchlevel}); do
		patch -s -Np0 -i ${XBPS_SRCDISTDIR}/bash${ver}-${p} && \
			msg_normal " Applying patch bash${ver}-$p.\n"
	done
}
