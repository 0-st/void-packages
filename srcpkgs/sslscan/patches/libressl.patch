--- sslscan.c.orig	2009-09-01 14:35:59.000000000 +0200
+++ sslscan.c	2016-03-31 22:47:08.828977557 +0200
@@ -91,7 +91,7 @@ struct sslCipher
 	char *version;
 	int bits;
 	char description[512];
-	SSL_METHOD *sslMethod;
+	const SSL_METHOD *sslMethod;
 	struct sslCipher *next;
 };
 
@@ -125,7 +125,7 @@ struct sslCheckOptions
 
 
 // Adds Ciphers to the Cipher List structure
-int populateCipherList(struct sslCheckOptions *options, SSL_METHOD *sslMethod)
+int populateCipherList(struct sslCheckOptions *options, const SSL_METHOD *sslMethod)
 {
 	// Variables...
 	int returnCode = true;
@@ -563,16 +563,7 @@ int testCipher(struct sslCheckOptions *o
 					}
 					if (options->xmlOutput != 0)
 						fprintf(options->xmlOutput, " sslversion=\"");
-					if (sslCipherPointer->sslMethod == SSLv2_client_method())
-					{
-						if (options->xmlOutput != 0)
-							fprintf(options->xmlOutput, "SSLv2\" bits=\"");
-						if (options->pout == true)
-							printf("SSLv2 || ");
-						else
-							printf("SSLv2  ");
-					}
-					else if (sslCipherPointer->sslMethod == SSLv3_client_method())
+					if (sslCipherPointer->sslMethod == SSLv23_client_method())
 					{
 						if (options->xmlOutput != 0)
 							fprintf(options->xmlOutput, "SSLv3\" bits=\"");
@@ -645,7 +636,7 @@ int testCipher(struct sslCheckOptions *o
 
 
 // Test for prefered ciphers
-int defaultCipher(struct sslCheckOptions *options, SSL_METHOD *sslMethod)
+int defaultCipher(struct sslCheckOptions *options, const SSL_METHOD *sslMethod)
 {
 	// Variables...
 	int cipherStatus;
@@ -688,16 +679,7 @@ int defaultCipher(struct sslCheckOptions
 						cipherStatus = SSL_connect(ssl);
 						if (cipherStatus == 1)
 						{
-							if (sslMethod == SSLv2_client_method())
-							{
-								if (options->xmlOutput != 0)
-									fprintf(options->xmlOutput, "  <defaultcipher sslversion=\"SSLv2\" bits=\"");
-								if (options->pout == true)
-									printf("|| SSLv2 || ");
-								else
-									printf("    SSLv2  ");
-							}
-							else if (sslMethod == SSLv3_client_method())
+							if (sslMethod == SSLv23_client_method())
 							{
 								if (options->xmlOutput != 0)
 									fprintf(options->xmlOutput, "  <defaultcipher sslversion=\"SSLv3\" bits=\"");
@@ -793,7 +775,7 @@ int getCertificate(struct sslCheckOption
 	BIO *fileBIO = NULL;
 	X509 *x509Cert = NULL;
 	EVP_PKEY *publicKey = NULL;
-	SSL_METHOD *sslMethod = NULL;
+	const SSL_METHOD *sslMethod = NULL;
 	ASN1_OBJECT *asn1Object = NULL;
 	X509_EXTENSION *extension = NULL;
 	char buffer[1024];
@@ -1192,17 +1174,12 @@ int testHost(struct sslCheckOptions *opt
 		switch (options->sslVersion)
 		{
 			case ssl_all:
-				status = defaultCipher(options, SSLv2_client_method());
-				if (status != false)
-					status = defaultCipher(options, SSLv3_client_method());
+					status = defaultCipher(options, SSLv23_client_method());
 				if (status != false)
 					status = defaultCipher(options, TLSv1_client_method());
 				break;
-			case ssl_v2:
-				status = defaultCipher(options, SSLv2_client_method());
-				break;
 			case ssl_v3:
-				status = defaultCipher(options, SSLv3_client_method());
+				status = defaultCipher(options, SSLv23_client_method());
 				break;
 			case tls_v1:
 				status = defaultCipher(options, TLSv1_client_method());
@@ -1298,10 +1275,6 @@ int main(int argc, char *argv[])
 			options.starttls = true;
 		}
 
-		// SSL v2 only...
-		else if (strcmp("--ssl2", argv[argLoop]) == 0)
-			options.sslVersion = ssl_v2;
-
 		// SSL v3 only...
 		else if (strcmp("--ssl3", argv[argLoop]) == 0)
 			options.sslVersion = ssl_v3;
@@ -1415,15 +1388,11 @@ int main(int argc, char *argv[])
 			switch (options.sslVersion)
 			{
 				case ssl_all:
-					populateCipherList(&options, SSLv2_client_method());
-					populateCipherList(&options, SSLv3_client_method());
+					populateCipherList(&options, SSLv23_client_method());
 					populateCipherList(&options, TLSv1_client_method());
 					break;
-				case ssl_v2:
-					populateCipherList(&options, SSLv2_client_method());
-					break;
 				case ssl_v3:
-					populateCipherList(&options, SSLv3_client_method());
+					populateCipherList(&options, SSLv23_client_method());
 					break;
 				case tls_v1:
 					populateCipherList(&options, TLSv1_client_method());
