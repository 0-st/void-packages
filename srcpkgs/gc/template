# Template file for 'gc'
pkgname=gc
_majorver=7.2
version="${_majorver}e"
revision=1
wrksrc="gc-${_majorver}"
build_style=gnu-configure
hostmakedepends="libtool"
short_desc="A garbage collector for C and C++"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.hpl.hp.com/personal/Hans_Boehm/gc/"
license="GPL-2"
distfiles="http://www.hpl.hp.com/personal/Hans_Boehm/gc/gc_source/gc-$version.tar.gz"
checksum=09315b48a82d600371207691126ad058c04677281ac318d86fa84c98c3c9af4b
long_desc="
 The Boehm-Demers-Weiser conservative garbage collector can be used as a
 garbage collecting replacement for C malloc or C++ new. It allows you to
 allocate memory basically as you normally would, without explicitly 
 deallocating memory that is no longer useful. The collector automatically 
 recycles memory when it determines that it can no longer be otherwise 
 accessed."

pre_configure() {
	libtoolize -f
}

gc-devel_package() {
	depends="gc>=${version}_${revision}"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/include
		vmove usr/share
		vmove "usr/lib/*.a"
		vmove "usr/lib/*.so"
		vmove usr/lib/pkgconfig
	}
}

gc_package() {
	pkg_install() {
		vmove all
	}
}
