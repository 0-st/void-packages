--- output.h.orig	2013-06-12 15:19:09.516990135 +0200
+++ output.h	2013-06-12 15:19:21.020928401 +0200
@@ -255,6 +255,8 @@ void printdatafilepaths();
 
 /*This is a helper function to determine the ordering of the script results
   based on their id */
+#ifndef NOLUA
 bool comparescriptids(ScriptResult first, ScriptResult second);
+#endif
 
 #endif /* OUTPUT_H */
--- output.cc.orig	2013-06-12 15:19:48.660779884 +0200
+++ output.cc	2013-06-12 15:20:03.436700386 +0200
@@ -2615,6 +2615,7 @@ void printdatafilepaths() {
 
 /*This is a helper function to determine the ordering of the script results
   based on their id */
+#ifndef NOLUA
 bool comparescriptids(ScriptResult first, ScriptResult second){
     //Pull the two id fields out for comparison
     std::string firstid(first.get_id());
@@ -2625,5 +2626,5 @@ bool comparescriptids(ScriptResult first
     else
         return false;
 }
-
+#endif
 
--- Target.cc.orig	2013-06-12 15:21:41.517183480 +0200
+++ Target.cc	2013-06-12 15:21:56.925107771 +0200
@@ -162,10 +162,12 @@ void Target::Recycle() {
 
 Target::~Target() {
   FreeInternal();
+#ifndef NOLUA
   while (!scriptResults.empty()) {
     scriptResults.front().clear();
     scriptResults.pop_front();
   }
+#endif
 }
 
 void Target::FreeInternal() {
--- portlist.cc.orig	2013-06-12 15:22:14.637019645 +0200
+++ portlist.cc	2013-06-12 15:22:27.268956160 +0200
@@ -146,10 +146,12 @@ void Port::freeService(bool del_service)
 
 void Port::freeScriptResults(void)
 {
+#ifndef NOLUA
     while (!scriptResults.empty()) {
         scriptResults.front().clear();
         scriptResults.pop_front();
     }
+#endif
 }
 
 /* Fills in namebuf (as long as there is space in buflen) with the
