# Template file for 'gdb'
pkgname=gdb
version=7.6.2
revision=2
patch_args="-Np1"
build_style=gnu-configure
configure_args="--disable-werror --disable-nls --with-system-readline --with-system-gdbinit=/etc/gdb/gdbinit"
makedepends="ncurses-devel zlib-devel readline-devel"
conf_files="/etc/gdb/gdbinit"
pycompile_dirs="usr/share/gdb/python/gdb"
short_desc="The GNU Debugger"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.gnu.org/software/gdb/"
license="GPL-3"
distfiles="http://ftp.gnu.org/gnu/gdb/gdb-$version.tar.bz2"
checksum=2f6a0e2ce1c66c9dedeb7f58a8d1298ad602ddcdaf15d23104e1f7832b96d0e8

# Package build options
build_options="gdbserver static"
desc_option_gdbserver="Enable support for building GDB server"
desc_option_static="Enable support for building GDB statically"

# Enable gdbserver if !static.
build_options_default="gdbserver"

if [ "$build_option_gdbserver" ]; then
	configure_args+=" --enable-gdbserver=yes"
else
	configure_args+=" --enable-gdbserver=no"
fi

if [ "$build_option_static" ]; then
	configure_args+=" CFLAGS=-static"
fi

if [ "$build_option_gdbserver" -a "$build_option_static" ]; then
	msg_error "$pkgver: gdbserver and static options cannot be enabled at the same time!\n"
fi

post_install() {
	# resolve conflicts with binutils
	rm -rf ${DESTDIR}/usr/include ${DESTDIR}/usr/lib
	[ -d ${DESTDIR}/usr/lib64 ] && rm -rf ${DESTDIR}/usr/lib64
	for f in bfd configure standards; do
		rm -f ${DESTDIR}/usr/share/info/${f}.info*
	done	
}
