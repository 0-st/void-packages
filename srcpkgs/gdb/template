# Template file for 'gdb'
pkgname=gdb
version=7.6
revision=1
build_style=gnu-configure
configure_args="--disable-nls --with-system-readline
 --with-system-gdbinit=/etc/gdb/gdbinit"
makedepends="ncurses-devel zlib-devel readline-devel"
short_desc="The GNU Debugger"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.gnu.org/software/gdb/"
license="GPL-3"
distfiles="http://ftp.gnu.org/gnu/gdb/gdb-$version.tar.bz2"
checksum=a410e8f35ee70cce83dbbf1da9e2a8373f271ac0e4b71db4336ae293fc7bdf1b
long_desc="
 The purpose of a debugger such as GDB is to allow you to see what
 is going on inside another program while it executes--or what
 another program was doing at the moment it crashed.

 GDB can do four main kinds of things (plus other things in support
 of these) to help you catch bugs in the act:

   * Start your program, specifying anything that might affect its behavior.
   * Make your program stop on specified conditions.
   * Examine what has happened, when your program has stopped.
   * Change things in your program, so you can experiment with correcting the
     effects of one bug and go on to learn about another."

post_install() {
	# resolve conflicts with binutils
	rm -rf ${DESTDIR}/usr/include ${DESTDIR}/usr/lib
	[ -d ${DESTDIR}/usr/lib64 ] && rm -rf ${DESTDIR}/usr/lib64
	for f in bfd configure standards; do
		rm -f ${DESTDIR}/usr/share/info/${f}.info*
	done	
}

gdb_package() {
	conf_files="/etc/gdb/gdbinit"
	pycompile_dirs="usr/share/gdb/python/gdb"
	pkg_install() {
		vmove all
	}
}
