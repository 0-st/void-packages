# Template file for 'gdb'
pkgname=gdb
version=7.3
distfiles="http://ftp.gnu.org/gnu/gdb/gdb-$version.tar.bz2"
build_style=gnu_configure
configure_args="--disable-nls --with-system-readline
--with-system-gdbinit=/etc/gdb/gdbinit"
short_desc="The GNU Debugger"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.gnu.org/software/gdb/"
license="GPL-3"
checksum=f9edc83ed921660b77aa2b2fc168b81639aab0f49a94d4b38f2f01bf51d5d2ba
long_desc="
 The purpose of a debugger such as GDB is to allow you to see what
 is going on inside another program while it executes--or what
 another program was doing at the moment it crashed.

 GDB can do four main kinds of things (plus other things in support
 of these) to help you catch bugs in the act:

   * Start your program, specifying anything that might affect its
     behavior.
   * Make your program stop on specified conditions.
   * Examine what has happened, when your program has stopped.
   * Change things in your program, so you can experiment with
     correcting the effects of one bug and go on to learn about
     another."

conf_files="/etc/gdb/gdbinit"

Add_dependency run glibc
Add_dependency run expat
Add_dependency run ncurses-libs
Add_dependency run zlib
Add_dependency run readline
Add_dependency run python

Add_dependency build texinfo
Add_dependency build ncurses-devel
Add_dependency build zlib-devel
Add_dependency build readline-devel
Add_dependency build python-devel

post_install()
{
	# resolve conflicts with binutils
	rm -rf ${DESTDIR}/usr/include ${DESTDIR}/usr/lib
	[ -d ${DESTDIR}/usr/lib64 ] && rm -rf ${DESTDIR}/usr/lib64
	for f in bfd configure standards; do
		rm -f ${DESTDIR}/usr/share/info/${f}.info*
	done	
}
