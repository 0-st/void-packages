From 55c537ebf0d7b70e85126e2e2b1c675193e38696 Mon Sep 17 00:00:00 2001
From: Pete Chou <petechou@gmail.com>
Date: Fri, 19 Dec 2014 18:10:06 +0800
Subject: [PATCH] Fix build with llvm trunk@224046 or later.

commit 0be06cf3609cdf6bdc8f769348f6ffcaba560eec
Author: Rafael Espindola <rafael.espindola@gmail.com>
Date:   Thu Dec 11 20:12:55 2014 +0000

    Remove a convoluted way of calling close by moving the call to the only caller.

    As a bonus we can actually check the return value.

    git-svn-id: https://llvm.org/svn/llvm-project/llvm/trunk@224046 91177308-0d34-0410-b5e6-96231b3b80d8
---
 lib/Core/Linker.cpp              |  4 ++--
 lib/Support/FileOutputBuffer.cpp | 13 +++++++------
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/lib/Core/Linker.cpp b/lib/Core/Linker.cpp
index b499b80..92747d5 100644
--- a/lib/Core/Linker.cpp
+++ b/lib/Core/Linker.cpp
@@ -281,7 +281,7 @@ bool Linker::emit(const Module& pModule, const std::string& pPath) {
   FileOutputBuffer::create(
       file, m_pObjLinker->getWriter()->getOutputSize(pModule), output);

-  result = emit(*output.get());
+  result = emit(*output);
   file.close();
   return result;
 }
@@ -294,7 +294,7 @@ bool Linker::emit(const Module& pModule, int pFileDescriptor) {
   FileOutputBuffer::create(
       file, m_pObjLinker->getWriter()->getOutputSize(pModule), output);

-  return emit(*output.get());
+  return emit(*output);
 }

 bool Linker::reset() {
diff --git a/lib/Support/FileOutputBuffer.cpp b/lib/Support/FileOutputBuffer.cpp
index 11435ea..5418ead 100644
--- a/lib/Support/FileOutputBuffer.cpp
+++ b/lib/Support/FileOutputBuffer.cpp
@@ -19,17 +19,17 @@ FileOutputBuffer::FileOutputBuffer(llvm::sys::fs::mapped_file_region* pRegion,

 FileOutputBuffer::~FileOutputBuffer() {
   // Unmap buffer, letting OS flush dirty pages to file on disk.
-  m_pRegion.reset(0);
+  m_pRegion.reset();
 }

-std::error_code FileOutputBuffer::create(
-    FileHandle& pFileHandle,
-    size_t pSize,
-    std::unique_ptr<FileOutputBuffer>& pResult) {
+std::error_code
+FileOutputBuffer::create(FileHandle& pFileHandle,
+                         size_t pSize,
+                         std::unique_ptr<FileOutputBuffer>& pResult) {
   std::error_code ec;
   std::unique_ptr<llvm::sys::fs::mapped_file_region> mapped_file(
       new llvm::sys::fs::mapped_file_region(pFileHandle.handler(),
-          false, llvm::sys::fs::mapped_file_region::readwrite, pSize, 0, ec));
+          llvm::sys::fs::mapped_file_region::readwrite, pSize, 0, ec));

   if (ec)
     return ec;
@@ -37,6 +37,7 @@ std::error_code FileOutputBuffer::create(
   pResult.reset(new FileOutputBuffer(mapped_file.get(), pFileHandle));
   if (pResult)
     mapped_file.release();
+
   return std::error_code();
 }

