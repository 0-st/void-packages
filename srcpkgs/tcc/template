# Template file for 'tcc'
pkgname=tcc
version=0.9.25
distfiles="${NONGNU_SITE}/tinycc/tcc-$version.tar.bz2"
short_desc="The Tiny C Compiler"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=1bed6cb0fb2ef4100df1b94435d22863679e84cf419ec48ef96d9c0e9063de35
long_desc="
 Features
    * SMALL! You can compile and execute C code everywhere, for example on
      rescue disks (about 100KB for x86 TCC executable, including C
      preprocessor, C compiler, assembler and linker).
    * FAST! tcc generates x86 code. No byte code overhead. Compile, assemble
      and link several times faster than GCC.
    * UNLIMITED! Any C dynamic library can be used directly. TCC is heading
      torward full ISOC99 compliance. TCC can of course compile itself.
    * SAFE! tcc includes an optional memory and bound checker. Bound checked
      code can be mixed freely with standard code.
    * Compile and execute C source directly. No linking or assembly necessary.
      Full C preprocessor and GNU-like assembler included.
    * C script supported : just add '#!/usr/local/bin/tcc -run' at the first
      line of your C source, and execute it directly from the command line.
    * With libtcc, you can use TCC as a backend for dynamic code generation."

Add_dependency run glibc
Add_dependency build perl # for pod2man

do_build()
{
	sed -i -e "s|pod2man|/usr/lib/perl5/core_perl/bin/pod2man|g" Makefile
	./configure --prefix=/usr --mandir=/usr/share/man
	make ${makejobs}
}

do_install()
{
	make DESTDIR=${DESTDIR} install
}
