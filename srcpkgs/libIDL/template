# Template build file for 'libIDL'.
pkgname=libIDL
version=0.8.13
revision=1
distfiles="${GNOME_SITE}/$pkgname/0.8/$pkgname-$version.tar.bz2"
build_style=gnu-configure
short_desc="CORBA Interface Definition Language parser"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=bccc7e10dae979518ff012f8464e47ec4b3558a5456a94c8679653aa0b262b71
long_desc="
 libIDL is a library licensed under the GNU LGPL for creating trees of
 CORBA Interface Definition Language (IDL) files, which is a
 specification for defining portable interfaces.  libIDL was initially
 written for ORBit (the ORB from the GNOME project, and the primary
 means of libIDL distribution).  However, the functionality was
 designed to be as reusable and portable as possible.

 It is written in C, and the aim is to retain the ability to compile it
 on a system with a standard C compiler.  Preprocessed parser files are
 included so you are not forced to rebuild the parser, however an
 effort is made to keep the parser and lexer compatible with standard
 Unix yacc.  Currently, flex is required to generate the lexical
 scanner.

 With libIDL, you can parse an IDL file which will be automatically run
 through the C preprocessor (on systems with one available), and have
 detailed error and warning messages displayed.  On a compilation
 without errors, the tree is returned to the custom application.
 libIDL performs compilation phases from lexical analysis to nearly
 full semantic analysis with some optimizations, and will attempt to
 generate meaningful errors and warnings for invalid or deprecated IDL."

subpackages="$pkgname-devel"
Add_dependency run glibc
Add_dependency run glib
Add_dependency build pkg-config
Add_dependency build flex
Add_dependency build glib-devel
