# Template file for 'qemu'
pkgname=qemu
version=0.12.1
distfiles="http://download.savannah.gnu.org/releases/qemu/qemu-$version.tar.gz"
build_style=configure
configure_args="--prefix=/usr --disable-strip --enable-sdl
--enable-curses --enable-curl --enable-bluez --enable-io-thread
--enable-kvm --enable-nptl --enable-uuid --enable-mixemu
--audio-drv-list=oss,alsa,sdl --audio-card-list=ac97,sb16,es1370,adlib
--kerneldir='/usr/src/kernel-headers-$($XBPS_PKGDB_CMD version kernel-headers)'"
short_desc="Open Source Processor Emulator"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=ee1682d3a4b84615d03941f0895a445d5f22e7583baae0a33b0439018dc0d995
long_desc="
 QEMU is a generic and open source machine emulator and virtualizer.

 When used as a machine emulator, QEMU can run OSes and programs made for
 one machine (e.g. an ARM board) on a different machine (e.g. your own PC).
 By using dynamic translation, it achieves very good performances.

 When used as a virtualizer, QEMU achieves near native performances by
 executing the guest code directly on the host CPU. A host driver called the
 QEMU accelerator (also known as KQEMU) is needed in this case. The
 virtualizer mode requires that both the host and guest machine use x86
 compatible processors."

Add_dependency run glibc
Add_dependency run alsa-lib
Add_dependency run curl-libs
Add_dependency run gnutls
Add_dependency run libbluetooth
Add_dependency run libidn
Add_dependency run openssl
Add_dependency run zlib
Add_dependency run ncurses-libs
Add_dependency run libuuid
Add_dependency run libX11
Add_dependency run SDL
Add_dependency build libidn-devel
Add_dependency build openssl-devel
Add_dependency build zlib-devel
Add_dependency build ncurses-devel
Add_dependency build libuuid-devel
Add_dependency build libX11-devel
Add_dependency build alsa-lib-devel
Add_dependency build curl-devel
Add_dependency build gnutls-devel
Add_dependency build SDL-devel
Add_dependency build libbluetooth-devel
Add_dependency build kernel-headers
