# Template build file for 'cross-arm-linux-musleabi'
#
_binutils_version=2.23.1
_gcc_version=4.7.2
_musl_version=0.9.9
_gmp_version=5.0.5
_mpfr_version=3.1.1
_mpc_version=0.9
_linux_version=3.7.1

_triplet=arm-linux-musleabi
_fpuflags="--with-float=hard"
_archflags="-march=armv6 -mfpu=vfp -mfloat-abi=hard"

pkgname=cross-${_triplet}
version=0.1
revision=1
short_desc="Cross toolchain for the ${_triplet} LE Hard Float target"
maintainer="Juan RP <xtraeme@gmail.org>"
homepage="http://www.voidlinux.eu"
license="Public Domain"
distfiles="
 http://ftp.gnu.org/pub/gnu/binutils/binutils-${_binutils_version}.tar.bz2
 http://ftp.gnu.org/pub/gnu/gcc/gcc-${_gcc_version}/gcc-${_gcc_version}.tar.bz2
 http://mirrors.kernel.org/gnu/gmp/gmp-${_gmp_version}.tar.bz2
 http://www.mpfr.org/mpfr-current/mpfr-${_mpfr_version}.tar.bz2
 http://www.multiprecision.org/mpc/download/mpc-${_mpc_version}.tar.gz
 http://www.kernel.org/pub/linux/kernel/v3.x/linux-${_linux_version}.tar.xz
 http://www.musl-libc.org/releases/musl-${_musl_version}.tar.gz"
checksum="
 2ab2e5b03e086d12c6295f831adad46b3e1410a3a234933a2e8fac66cb2e7a19
 8a9283d7010fb9fe5ece3ca507e0af5c19412626384f8a5e9434251ae100b084
 1f588aaccc41bb9aed946f9fe38521c26d8b290d003c5df807f65690f2aadec9
 7b66c3f13dc8385f08264c805853f3e1a8eedab8071d582f3e661971c9acd5fd
 fd3efe422f0d454592059e80f2c00d1a2e381bf2beda424c5094abd4deb049ac
 e1ca8b8376ebdf797357f5f1734ed6eed3cadc16c32d280a780f150372de7255
 91f67d4e1e696df344c93b46bfcb1f6ad6d820e6ae544e3673f496e2d308f492"

create_wrksrc=yes
disable_debug=yes
nostrip_files="libgcc.a libgcov.a libgcc_eh.a"
subpackages="${pkgname}-libc"
makedepends="perl flex"
depends="${pkgname}-libc-${version}_${revision}"

_CROSS_TARGET=${_triplet}
_CROSS_SYSROOT="/usr/${_CROSS_TARGET}"

_apply_patch() {
	local pname="$(basename $1)"

	if [ ! -f ".${pname}_done" ]; then
		patch -Np0 -i ${1}
		touch .${pname}_done
	fi
}

_binutils_build() {
	[ -f ${wrksrc}/.binutils_build_done ] && return 0

	cd ${wrksrc}/binutils-${_binutils_version}
	_apply_patch ${FILESDIR}/binutils-2.22-musl.diff

	msg_normal "Building cross binutils bootstrap\n"

	[ ! -d ../binutils-build ] && mkdir ../binutils-build
	cd ../binutils-build

	../binutils-${_binutils_version}/configure \
		--prefix=/usr --target=${_CROSS_TARGET} \
		--disable-nls --disable-multilib --disable-werror \
		--disable-shared ${_fpuflags}

	make configure-host && make ${makejobs}
	make install

	touch ${wrksrc}/.binutils_build_done
}

_gcc_bootstrap() {
	[ -f ${wrksrc}/.gcc_bootstrap_done ] && return 0

	cd ${wrksrc}/gcc-${_gcc_version}
	_apply_patch ${FILESDIR}/gcc-4.7.2-musl.diff

	msg_normal "Building cross gcc bootstrap\n"

	[ ! -d ../gcc-bootstrap ] && mkdir ../gcc-bootstrap
	cd ../gcc-bootstrap

	if [ ! -d ${wrksrc}/gcc-${_gcc_version}/gmp ]; then
		mv ${wrksrc}/gmp-${_gmp_version} ${wrksrc}/gcc-${_gcc_version}/gmp
	fi
	if [ ! -d ${wrksrc}/gcc-${_gcc_version}/mpfr ]; then
		mv ${wrksrc}/mpfr-${_mpfr_version} ${wrksrc}/gcc-${_gcc_version}/mpfr
	fi
	if [ ! -d ${wrksrc}/gcc-${_gcc_version}/mpc ]; then
		mv ${wrksrc}/mpc-${_mpc_version} ${wrksrc}/gcc-${_gcc_version}/mpc
	fi
 
	../gcc-${_gcc_version}/configure --prefix=/usr \
		--target=${_CROSS_TARGET} --with-newlib \
		--disable-nls --disable-shared --disable-multilib \
		--disable-decimal-float --disable-libgomp --disable-libmudflap \
		--disable-libquadmath --disable-libssp --disable-threads \
		--enable-languages=c ${_fpuflags}

	make ${makejobs}
	make install

	touch ${wrksrc}/.gcc_bootstrap_done
}

_linux_headers() {
	[ -f ${wrksrc}/.linux_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building Linux API headers for ARM\n"

	cd linux-${_linux_version}

	make ARCH=arm headers_check
	make ARCH=arm INSTALL_HDR_PATH=${_CROSS_SYSROOT}/usr headers_install

	touch ${wrksrc}/.linux_build_done
}

_musl_build() {
	[ -f ${wrksrc}/.musl_build_done ] && return 0

	cd ${wrksrc}/musl-${_musl_version}
	msg_normal "Building cross musl libc\n"

	CC="${_CROSS_TARGET}-gcc" CFLAGS="-Os -pipe ${_archflags}" \
		./configure --prefix=/usr \

	make ${makejobs}
	make DESTDIR=${_CROSS_SYSROOT} install

	touch ${wrksrc}/.musl_build_done
}
	
_gcc_build() {
	[ -f ${wrksrc}/.gcc_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building cross gcc final\n"

	[ ! -d gcc-build ] && mkdir gcc-build
	cd gcc-build

	../gcc-${_gcc_version}/configure \
		--target=${_CROSS_TARGET} --prefix=/usr \
		--enable-languages=c,c++ \
		--disable-multilib --disable-nls --disable-libquadmath \
		--disable-libmudflap --enable-c99 --enable-shared \
		--enable-long-long --enable-threads=posix \
		--disable-libstdcxx-pch ${_fpuflags}

	make ${makejobs}

	touch ${wrksrc}/.gcc_build_done
}

do_build() {
	# Ensure we use sane environment
	unset CC CXX CPP LD AS AR RANLIB OBJDUMP READELF NM
	unset CFLAGS CXXFLAGS CPPFLAGS LDFLAGS
	export CFLAGS="-Os -pipe" CXXFLAGS="-Os -pipe"

	for f in include lib libexec bin sbin; do
		if [ ! -d ${_CROSS_SYSROOT}/usr/${f} ]; then
			mkdir -p ${_CROSS_SYSROOT}/usr/${f}
		fi
		if [ ! -h ${_CROSS_SYSROOT}/${f} ]; then
			ln -sfr ${_CROSS_SYSROOT}/usr/${f} ${_CROSS_SYSROOT}/${f}
		fi
	done

	_binutils_build
	_gcc_bootstrap
	_linux_headers
	_musl_build
	_gcc_build
}

do_install() {
	for f in include lib libexec bin sbin; do
		if [ ! -d ${DESTDIR}/${_CROSS_SYSROOT}/usr/${f} ]; then
			mkdir -p ${DESTDIR}/${_CROSS_SYSROOT}/usr/${f}
		fi
		if [ ! -h ${DESTDIR}/${_CROSS_SYSROOT}/${f} ]; then
			ln -sfr ${DESTDIR}/${_CROSS_SYSROOT}/usr/${f} \
				${DESTDIR}/${_CROSS_SYSROOT}/${f}
		fi
	done

	# install cross binutils
	cd ${wrksrc}/binutils-build && make DESTDIR=${DESTDIR} install

	# install cross gcc
	cd ${wrksrc}/gcc-build && make DESTDIR=${DESTDIR} install

	# install musl libc for target
	cd ${wrksrc}/musl-${_musl_version} && \
		make DESTDIR=${DESTDIR}/${_CROSS_SYSROOT} install

	# Remove useless headers.
	rm -rf ${DESTDIR}/usr/lib/gcc/${_CROSS_TARGET}/*/include-fixed/ \
		${DESTDIR}/usr/lib/gcc/${_CROSS_TARGET}/*/include/stddef.h

	# Make ld-musl-arm.so.1 symlink relative to cwd.
	cd ${DESTDIR}/${_CROSS_SYSROOT}/usr/lib
	ln -sf libc.so ld-musl-arm.so.1

	# install linux API headers for MIPS
	cd ${wrksrc}/linux-${_linux_version} && \
		make ARCH=arm INSTALL_HDR_PATH=${DESTDIR}/${_CROSS_SYSROOT}/usr \
		headers_install
	rm -f $(find ${DESTDIR}/${_CROSS_SYSROOT}/usr/include -name .install -or -name ..install.cmd)
	rm -rf ${DESTDIR}/${_CROSS_SYSROOT}/usr/include/drm

	# Remove unnecessary stuff
	rm -f ${DESTDIR}/usr/lib*/libiberty.a
	rm -rf ${DESTDIR}/usr/share
	rm -rf ${DESTDIR}/${_CROSS_SYSROOT}/{etc,var}
	rm -rf ${DESTDIR}/${_CROSS_SYSROOT}/usr/{sbin,share,libexec}
	rm -f ${DESTDIR}/${_CROSS_SYSROOT}/libexec
	rm -f ${DESTDIR}/${_CROSS_SYSROOT}/lib/*.py
}

do_clean() {
	# Remove temporary stuff from masterdir
	rm -rf ${_CROSS_SYSROOT}
	rm -f /usr/bin/${_CROSS_TARGET}*
	rm -rf /usr/lib/gcc/${_CROSS_TARGET}
	rm -rf /usr/libexec/gcc/${_CROSS_TARGET}
}
