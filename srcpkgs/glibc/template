# Template file for 'glibc'
pkgname=glibc
version=2.17
revision=7
short_desc="The GNU C library"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.gnu.org/software/libc"
license="GPL-2, LGPL-2.1, BSD"
distfiles="http://ftp.gnu.org/gnu/glibc/glibc-${version}.tar.xz"
checksum=6914e337401e0e0ade23694e1b2c52a5f09e4eda3270c67e7c3ba93a89b5b23e

hostmakedepends="bison perl kernel-libc-headers>=3.7<3.8"

# Force creation of -dbg pkg, required by valgrind.
force_debug_pkgs=yes

do_configure() {
	local _headers _floatabi

	mkdir build && cd build

	echo "slibdir=/usr/lib" > configparms
	echo "bindir=/usr/bin" >> configparms
	echo "sbindir=/usr/sbin" >> configparms

	if [ "$XBPS_TARGET_MACHINE" = "i686" ]; then
		# Build with -mno-tls-direct-seg-refs to avoid performance
		# problems with Xen on x86 32bit.
		export CFLAGS="${CFLAGS} -mno-tls-direct-seg-refs"
	elif [ "$XBPS_TARGET_MACHINE" = "armv6l" ]; then
		# Force hard float ABI.
		# To build for soft float: --with-float=soft --without-fp.
		_floatabi="--with-float=hard"
	fi
	if [ "$CROSS_BUILD" ]; then
		_headers="--with-headers=$XBPS_CROSS_BASE/include"
	else
		_headers="--with-headers=/usr/include"
	fi

	../configure ${CONFIGURE_SHARED_ARGS} \
		--bindir=/usr/bin --sbindir=/usr/sbin \
		--enable-add-ons=ports,nptl,libidn --enable-obsolete-rpc \
		--enable-multi-arch --enable-bind-now \
		--disable-profile --enable-kernel=2.6.27 \
		--enable-stack-guard-randomization \
		--without-cvs --without-gd --libexecdir=/usr/lib \
		--libdir=/usr/lib ${_floatabi} ${_headers}
}

do_build() {
	cd build && make ${makejobs}
}

do_install() {
	# Create DESTDIR/etc/ld.so.conf
	mkdir -p ${DESTDIR}/etc
	echo "include /etc/ld.so.conf.d/*.conf" > ${DESTDIR}/etc/ld.so.conf

	cd ${wrksrc}/build
	make install_root=${DESTDIR} install

	# create /etc/default/libc-locales
	vinstall ${FILESDIR}/libc-locales 644 etc/default
	cp ${wrksrc}/localedata/SUPPORTED ${wrksrc}/build
	sed -i	-e "s|/| |g" \
		-e 's|\\| |g' \
		-e "s|SUPPORTED-LOCALES=||" \
		-e "s|^|#|g" ${wrksrc}/build/SUPPORTED
	cat ${wrksrc}/build/SUPPORTED >> ${DESTDIR}/etc/default/libc-locales

	# ldd is a bash script, so make it run as such.
	. $XBPS_HELPERSDIR/replace-interpreter.sh
	replace_interpreter bash ${DESTDIR}/usr/bin/ldd

	# On x86_64, add dynamic linker's 32bit version to ldd.
	if [ "$XBPS_TARGET_MACHINE" = "x86_64" ]; then
		rtldlist="/lib/ld-linux.so.2 /lib/ld-linux-x86-64.so.2"
		sed -i "s|^RTLDLIST.*$|RTLDLIST=\"$rtldlist\"|" \
			${DESTDIR}/usr/bin/ldd
	fi
	install -d ${DESTDIR}/etc/ld.so.conf.d
	echo "/usr/local/lib" > ${DESTDIR}/etc/ld.so.conf.d/usr_local.conf
	chmod 644 ${DESTDIR}/etc/ld.so.conf.d/usr_local.conf
	rm -f ${DESTDIR}/etc/ld.so.cache

	# Switch to /usr.
	vmkdir usr/sbin
	mv ${DESTDIR}/sbin/* ${DESTDIR}/usr/sbin

	# Create ld-linux.so.3 symlink for ARM.
	if [ "$XBPS_TARGET_MACHINE" = "armv6l" ]; then
		ln -sfr ${DESTDIR}/usr/lib/ld-linux-armhf.so.3 \
			${DESTDIR}/usr/lib/ld-linux.so.3
	fi
}

glibc-devel_package() {
	depends="kernel-libc-headers glibc>=${version}"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/include
		vmove "usr/lib/*.a"
		vmove "usr/lib/*crt1.o"
		vmove usr/share/info
	}
}

glibc-locales_package() {
	noarch=yes
	conf_files="/etc/default/libc-locales"
	short_desc+=" - locale data files"
	pkg_install() {
		vmove etc/default
		vmove usr/share/i18n
		vmove usr/share/locale
	}
}

nscd_package() {
	systemd_services="nscd.service on"
	conf_files="/etc/nscd.conf"
	short_desc+=" - Name Service Cache Daemon"
	pkg_install() {
		vmove usr/sbin/nscd
		vinstall ${FILESDIR}/nscd.service 644 usr/lib/systemd/system
		vinstall ${FILESDIR}/nscd.socket 644 usr/lib/systemd/system
		vinstall ${FILESDIR}/nscd.tmpfiles.d 644 usr/lib/tmpfiles.d nscd.conf
		vinstall ${FILESDIR}/nscd.conf 644 etc
	}
}

glibc_package() {
	# Do not strip these files, objcopy errors out.
	nostrip_files="
		XBS5_ILP32_OFFBIG
		XBS5_ILP32_OFF32
		POSIX_V6_ILP32_OFF32
		POSIX_V6_ILP32_OFFBIG
		POSIX_V7_ILP32_OFF32
		POSIX_V7_ILP32_OFFBIG
		POSIX_V6_LP64_OFF64
		POSIX_V7_LP64_OFF64
		XBS5_LP64_OFF64"
	conf_files="
		/etc/rpc
		/etc/ld.so.conf"
	depends="base-files glibc-locales"
	pkg_install() {
		vmove all
	}
}
