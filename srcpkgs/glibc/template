# Template file for 'glibc'
pkgname=glibc
version=2.17
revision=2
short_desc="The GNU C library"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.gnu.org/software/libc"
license="GPL-2, LGPL-2.1, BSD"
distfiles="http://ftp.gnu.org/gnu/glibc/glibc-${version}.tar.xz"
checksum=6914e337401e0e0ade23694e1b2c52a5f09e4eda3270c67e7c3ba93a89b5b23e

# Do not strip these files objcopy errors out.
nostrip_files="
 XBS5_ILP32_OFFBIG
 XBS5_ILP32_OFF32
 POSIX_V6_ILP32_OFF32
 POSIX_V6_ILP32_OFFBIG
 POSIX_V7_ILP32_OFF32
 POSIX_V7_ILP32_OFFBIG"

conf_files="/etc/rpc /etc/ld.so.conf"
subpackages="glibc-devel glibc-locales nscd"
depends="base-files glibc-locales"
makedepends="bison perl kernel-libc-headers>=3.7<3.8"

if [ -n "$XBPS_CROSS_TRIPLET" ]; then
	makedepends="bison perl"
fi

do_configure() {
	local _headers _floatabi

	mkdir build && cd build

	echo "slibdir=/usr/lib" > configparms
	echo "bindir=/usr/bin" >> configparms
	echo "sbindir=/usr/sbin" >> configparms

	if [ "${XBPS_MACHINE}" = "i686" ]; then
		# Build with -mno-tls-direct-seg-refs to avoid performance
		# problems with Xen on x86 32bit.
		export CFLAGS="${CFLAGS} -mno-tls-direct-seg-refs"
	elif [ "$XBPS_MACHINE" = "armv6l" ]; then
		# Force hard float ABI.
		_floatabi="--with-float=hard"
	fi

	if [ -n "$XBPS_CROSS_TRIPLET" ]; then
		_headers="--with-headers=/usr/$XBPS_CROSS_TRIPLET/include"
	else
		_headers="--with-headers=/usr/include"
	fi

	../configure ${CONFIGURE_SHARED_ARGS} \
		--bindir=/usr/bin --sbindir=/usr/sbin \
		--enable-add-ons=ports,nptl,libidn --enable-obsolete-rpc \
		--enable-multi-arch --enable-bind-now \
		--disable-profile --enable-kernel=2.6.27 \
		--enable-stack-guard-randomization \
		--without-cvs --without-gd --libexecdir=/usr/lib \
		--libdir=/usr/lib ${_floatabi} ${_headers}
}

do_build() {
	cd build && make ${makejobs}
}

do_install() {
	# Create DESTDIR/etc/ld.so.conf
	mkdir -p ${DESTDIR}/etc
	echo "include /etc/ld.so.conf.d/*.conf" > ${DESTDIR}/etc/ld.so.conf

	cd ${wrksrc}/build
	make install_root=${DESTDIR} install

	# create /etc/default/libc-locales
	vinstall ${FILESDIR}/libc-locales 644 etc/default
	cp ${wrksrc}/localedata/SUPPORTED ${wrksrc}/build
	sed -i	-e "s|/| |g" \
		-e 's|\\| |g' \
		-e "s|SUPPORTED-LOCALES=||" \
		-e "s|^|#|g" ${wrksrc}/build/SUPPORTED
	cat ${wrksrc}/build/SUPPORTED >> ${DESTDIR}/etc/default/libc-locales

	# ldd is a bash script, so make it run as such.
	. $XBPS_HELPERSDIR/replace-interpreter.sh
	replace_interpreter bash ${DESTDIR}/usr/bin/ldd

	# On x86_64, add dynamic linker's 32bit version to ldd.
	if [ "$XBPS_MACHINE" = "x86_64" ]; then
		rtldlist="/lib/ld-linux.so.2 /lib/ld-linux-x86-64.so.2"
		sed -i "s|^RTLDLIST.*$|RTLDLIST=\"$rtldlist\"|" \
			${DESTDIR}/usr/bin/ldd
	fi
	install -d ${DESTDIR}/etc/ld.so.conf.d
	echo "/usr/local/lib" > ${DESTDIR}/etc/ld.so.conf.d/usr_local.conf
	chmod 644 ${DESTDIR}/etc/ld.so.conf.d/usr_local.conf
	rm -f ${DESTDIR}/etc/ld.so.cache

	# Switch to /usr.
	vmove "sbin/*" usr/sbin
}
