# Template file for 'glibc'
pkgname=glibc
version=2.11.1
revision="2-20100511"
distfiles="http://ftp.gnu.org/gnu/glibc/glibc-${version}.tar.bz2"
build_style=gnu_configure
build_wrksrc="build"
configure_script="../configure"
configure_args="--with-tls -disable-profile --with-__thread
--enable-kernel=2.6.27 --enable-add-ons --without-gd
--without-cvs --without-selinux --libexecdir=/usr/lib
--libdir=/usr/lib --enable-stackguard-randomization
--with-headers=$XBPS_MASTERDIR/usr/include"
make_install_target="install_root=$XBPS_DESTDIR/$pkgname-$version install"
short_desc="The GNU C library"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=64e01d0cfc964a8d8a8c74b5d36bd655e800c12d22b756dd84d867148a595fa1
long_desc="
 The GNU C Library is the standard system C library for all GNU systems,
 and is an important part of what makes up a GNU system.  It provides the
 system API for all programs written in C and C-compatible languages such
 as C++ and Objective C; the runtime facilities of other programming
 languages use the C library to access the underlying operating system."

# Build with -mno-tls-direct-seg-refs to avoid performance problems
# with Xen on x86 32bit.
if [ "${xbps_machine}" = "i686" ]; then
	CFLAGS="-mno-tls-direct-seg-refs"
fi

# Don't check for deps here
ignore_vdeps_dir="/usr/lib/gconv"

base_chroot=yes
conf_files="/etc/rpc /etc/ld.so.conf /etc/nsswitch.conf"
subpackages="glibc-devel glibc-locales nscd"

Add_dependency build	gcc
Add_dependency build	kernel-libc-headers
Add_dependency run	xbps-base-files
Add_dependency run	libgcc
Add_dependency run	glibc-locales

pre_configure()
{
	# We must configure it in another directory.
	mkdir -p ${build_wrksrc}
	echo "slibdir=/lib" > ${build_wrksrc}/configparms
	# glibc fails to build if -march not set for a minimal cpu.
	if [ "$xbps_machine" != "x86_64" ]; then
		echo "CFLAGS+=-march=${xbps_machine%%-*} -mtune=generic" \
			>> ${build_wrksrc}/configparms
	fi
}

pre_install()
{
	# Create DESTDIR/etc/ld.so.conf
	mkdir -p ${DESTDIR}/etc
	echo "include /etc/ld.so.conf.d/*.conf" > ${DESTDIR}/etc/ld.so.conf
}

post_install()
{
	# Replace hardcoded path to bash.
	. $XBPS_HELPERSDIR/replace-interpreter.sh
	replace_interpreter bash ${DESTDIR}/usr/bin/ldd

	# On x86_64, add dynamic linker's 32bit version to ldd.
	if [ "$xbps_machine" = "x86_64" ]; then
		rtldlist="/lib/ld-linux.so.2 /lib/ld-linux-x86-64.so.2"
		sed -i "s|^RTLDLIST.*$|RTLDLIST=\"$rtldlist\"|" \
			${DESTDIR}/usr/bin/ldd
	fi
	install -m644 ${FILESDIR}/nsswitch.conf \
		${DESTDIR}/etc/nsswitch.conf || return 1

	install -d ${DESTDIR}/etc/ld.so.conf.d
	echo "/usr/local/lib" > ${DESTDIR}/etc/ld.so.conf.d/usr_local.conf
	chmod 644 ${DESTDIR}/etc/ld.so.conf.d/usr_local.conf
	rm -f ${DESTDIR}/etc/ld.so.cache
}
