# Template file for 'epiphany'
pkgname=epiphany
version=2.30.2
revision=1
distfiles="${GNOME_SITE}/$pkgname/2.30/$pkgname-$version.tar.bz2"
build_style=gnu_configure
configure_args="--disable-schemas-install --disable-scrollkeeper
--with-gconf-schema-file-dir=/usr/share/gconf/schemas --disable-introspection
--localstatedir=/var --enable-network-manager --without-ca-file"
short_desc="Intuitive GNOME web browser"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=cd0124e71e72142593cfeb442d58d97e99ba94ace6e31d94717fe977c0bfb98a
long_desc="
 Epiphany is a simple yet powerful GNOME web browser targeted at non-technical
 users. Its principles are simplicity and standards compliance. Simplicity is
 achieved by a well designed user interface and reliance on external
 applications for performing external tasks (such as reading email). Simplicity
 should not mean less powerful. Standards compliance is achieved on the HTML
 side by using the WebKitGTK+ rendering engine; and on the user interface side
 by closely following the GNOME Human Interface Guidelines (HIG) and by close
 integration with the GNOME desktop."

CFLAGS="-I/usr/include/nspr -I/usr/include/nss"

gconf_schemas="epiphany.schemas epiphany-lockdown.schemas"
gtk_iconcache_dirs="/usr/share/icons/hicolor"
subpackages="$pkgname-devel"

# XXX: add gobject-introspection/seed support, requires gir-repository.
# XXX: enable --with-ca-file.

Add_dependency run glibc
Add_dependency run avahi-glib-libs
Add_dependency run avahi-libs
Add_dependency run libX11
Add_dependency run libSM
Add_dependency run libICE
Add_dependency run libxslt
Add_dependency run zlib
Add_dependency run libxml2
Add_dependency run GConf
Add_dependency run startup-notification
Add_dependency run libnotify
Add_dependency run webkit-gtk
Add_dependency run gtk+
Add_dependency run atk
Add_dependency run pango
Add_dependency run cairo
Add_dependency run freetype
Add_dependency run fontconfig
Add_dependency run libsoup-gnome
Add_dependency run libsoup
Add_dependency run glib
Add_dependency run libgnome-keyring
Add_dependency run dbus-glib
Add_dependency run dbus-libs
Add_dependency run nss
Add_dependency run nspr
Add_dependency run NetworkManager

Add_dependency build pkg-config
Add_dependency build intltool
Add_dependency build gnome-doc-utils
Add_dependency build avahi-glib-libs-devel
Add_dependency build avahi-libs-devel
Add_dependency build libX11-devel
Add_dependency build libSM-devel
Add_dependency build libICE-devel
Add_dependency build libxslt-devel
Add_dependency build zlib-devel
Add_dependency build libxml2-devel
Add_dependency build GConf-devel
Add_dependency build startup-notification-devel
Add_dependency build libnotify-devel
Add_dependency build webkit-gtk-devel
Add_dependency build gtk+-devel
Add_dependency build atk-devel
Add_dependency build pango-devel
Add_dependency build cairo-devel
Add_dependency build freetype-devel
Add_dependency build fontconfig-devel
Add_dependency build libsoup-gnome-devel
Add_dependency build libsoup-devel
Add_dependency build glib-devel
Add_dependency build libgnome-keyring-devel
Add_dependency build dbus-glib-devel
Add_dependency build dbus-devel
Add_dependency build nss-devel
Add_dependency build nspr-devel
Add_dependency build NetworkManager-devel

Add_dependency full hicolor-icon-theme
Add_dependency full desktop-file-utils

pre_configure()
{
	# Don't use cmp from busybox.
	for f in $(find ${wrksrc} -type f -name Makefile.in); do
		sed -i "s|cmp -s|/usr/bin/cmp -s|g" ${f} || return 1
	done
}
