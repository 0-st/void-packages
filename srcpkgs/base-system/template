# Template file for 'base-system'
pkgname=base-system
version=0.76
revision=1
build_style=meta
homepage="http://www.voidlinux.eu/"
short_desc="Void Linux base system meta package"
maintainer="Juan RP <xtraeme@gmail.com>"
license="Public domain"

makedepends="
 base-files>=0.77 ncurses coreutils findutils gcc glibc diffutils dash bash
 grep gzip texinfo file sed gawk less util-linux which tar man-pages man-db
 shadow e2fsprogs btrfs-progs xfsprogs f2fs-tools dosfstools kbd psmisc procps-ng
 tzdata pciutils iana-etc systemd dcron?cron-daemon openssh-server dhcpcd
 iproute2 iputils bridge-utils ifenslave iw wpa_supplicant xbps netbsd-wtf
 nvi sudo wifi-firmware linux void-artwork nss-mdns traceroute ethtool parted"

if [ "$XBPS_TARGET_ARCH" = "armv6l" ]; then
	# Raspberry Pi
	makedepends+=" ntp?ntp-daemon rpi-firmware"
fi

do_install() {
	if [ "$XBPS_TARGET_ARCH" = "armv6l" ]; then
		# Raspberry Pi:
		#  - Load the audio module by default.
		vmkdir usr/lib/modules-load.d
		echo snd-bcm2835 > ${DESTDIR}/usr/lib/modules-load.d/snd_bcm2835.conf
		#  - Fix permissions for the vchiq device.
		vmkdir usr/lib/udev/rules.d
		echo 'SUBSYSTEM=="vchiq", GROUP="video", MODE="0660"' > \
			${DESTDIR}/usr/lib/udev/rules.d/71-raspberrypi.rules
	else
		vmkdir usr
	fi
}

base-system_package() {
	replaces="base-system-rpi>=0"
	systemd_services="sshd.service off"
	# gcc and glibc shouldn't be direct dependencies.
	for f in ${makedepends}; do
		if [ "$f" != "gcc" -a "$f" != "glibc" ]; then
			depends+=" $f"
		fi
	done
	pkg_install() {
		vmove all
	}
}
