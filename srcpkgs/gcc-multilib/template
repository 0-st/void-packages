# Template build file for 'gcc-multilib'
pkgname=gcc-multilib
_majorver=4.7
version=${_majorver}.3
revision=7
wrksrc="gcc-${version}"
short_desc="The GNU C Compiler (multilib files)"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://gcc.gnu.org"
license="GFDL-1.2, GPL-3, LGPL-2.1"
distfiles="http://ftp.gnu.org/pub/gnu/gcc/gcc-$version/gcc-$version.tar.bz2"
checksum=2f7c37eb4fc14422ff2358a9ef59c974a75ab41204ef0e49fc34ab1d8981a9c3

only_for_archs="x86_64"

hostmakedepends="perl flex zip unzip"
makedepends="zlib-devel libmpc-devel>=1.0.1_2 ppl-devel>=1.0 cloog-devel isl-devel
 libfl-devel glibc32-devel"

case "$XBPS_TARGET_MACHINE" in
	i?86) _triplet="${XBPS_TARGET_MACHINE}-pc-linux-gnu";;
	x86_64) _triplet="${XBPS_MACHINE}-unknown-linux-gnu";;
	armv6l) _triplet="arm-linux-gnueabihf";;
esac

do_configure() {
	# As specified in the LFS book, disable installing libiberty.
	sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in
	# Do not run fixincludes
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	./configure --prefix=/usr --mandir=/usr/share/man \
		--infodir=/usr/share/info --libexecdir=/usr/lib \
		--enable-clocale=gnu --disable-bootstrap --libdir=/usr/lib \
		--enable-threads=posix --enable-__cxa_atexit --enable-multilib \
		--disable-rpath --with-system-zlib --enable-shared --enable-lto \
		--enable-linker-build-id --enable-gnu-unique-object \
		--enable-checking=release --disable-libstdcxx-pch \
		--with-ppl --enable-cloog-backend=isl --enable-libstdcxx-time \
		--enable-tls --enable-languages="c,c++,objc,obj-c++,fortran,go,lto,java" \
		--enable-java-gc=boehm --enable-fast-character
}

do_build() {
	make ${makejobs}
}

do_install() {
	if [ "$XBPS_TARGET_MACHINE" = "x86_64" ]; then
		vmkdir usr/lib
		cd ${DESTDIR}/usr
		ln -sf lib lib64
	fi
	cd ${wrksrc}
	make DESTDIR=${DESTDIR} install

	# Make version a symlink of major version to make all versions
	# from the same series work automagically.
	mv ${DESTDIR}/usr/lib/gcc/${_triplet}/${version} \
		${DESTDIR}/usr/lib/gcc/${_triplet}/${_majorver}
	cd ${DESTDIR}/usr/lib/gcc/${_triplet}
	ln -sf ${_majorver} ${version}

	# Ditto for c++ headers.
	mv ${DESTDIR}/usr/include/c++/${version} \
		${DESTDIR}/usr/include/c++/${_majorver}
	cd ${DESTDIR}/usr/include/c++
	ln -sf ${_majorver} ${version}

	rm -f ${DESTDIR}/usr/lib64

	# Remove libffi stuff.
	rm -f ${DESTDIR}/usr/lib/libffi*
	rm -f ${DESTDIR}/usr/share/man/man3/ffi*

	if [ -d ${DESTDIR}/usr/lib32 ]; then
		rm -f ${DESTDIR}/usr/lib32/libffi*
		rm -f ${DESTDIR}/usr/lib32/libgfortran*
		rm -f ${DESTDIR}/usr/lib32/libgo.{a,so*}
		rm -f ${DESTDIR}/usr/lib32/libgobegin.a
		rm -f ${DESTDIR}/usr/lib32/libquadmath*
		rm -rf ${DESTDIR}/usr/lib32/go
	fi

	# Remove all python scripts in libdir.
	rm -f ${DESTDIR}/usr/lib/*.py

	# Remove more python stuff.
	if [ -d ${DESTDIR}/usr/share/gcc-${version}/python ]; then
		rm -rf ${DESTDIR}/usr/share/gcc-${version}/python
	fi
}

gcc-c++-multilib_package() {
        depends="gcc-c++>=${_majorver} gcc-multilib>=${_majorver} libstdc++32-devel>=${_majorver}"
        short_desc="GCC C++ compiler (multilib files)"
        noverifyrdeps=yes
        pkg_install() {
                vmkdir usr/lib/gcc/${_triplet}/${_majorver}/32
                mv ${DESTDIR}/usr/lib32/libstdc++.a \
                        ${PKGDESTDIR}/usr/lib/gcc/${_triplet}/${_majorver}/32
                mv ${DESTDIR}/usr/lib32/libsupc++.a \
                        ${PKGDESTDIR}/usr/lib/gcc/${_triplet}/${_majorver}/32
        }
}

gcc-multilib_package() {
        depends="gcc>=${_majorver} libgcc32>=${_majorver} libgomp32>=${_majorver} libitm32>=${_majorver} zlib32 glibc32-devel"
        noverifyrdeps=yes
        pkg_install() {
                vmove usr/lib/gcc/${_triplet}/${_majorver}/32
                vmove "usr/lib32/libssp*.a"
                vinstall ${wrksrc}/host-${_triplet}/gcc/specs 644 usr/lib/gcc/${_triplet}/${_majorver}
        }
}

gcc-objc-multilib_package() {
        depends="gcc-multilib>=${_majorver} gcc-objc>=${_majorver} libobjc32>=${_majorver}"
        short_desc="The GNU Objective-C compiler (multilib files)"
        noverifyrdeps=yes
        pkg_install() {
                vmkdir usr/lib/gcc/${_triplet}/${_majorver}/32
                mv ${DESTDIR}/usr/lib32/libobjc*.a \
                        ${PKGDESTDIR}/usr/lib/gcc/${_triplet}/${_majorver}/32
        }
}

libgcc32_package() {
        short_desc="GCC library (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libgcc_s.so*"
        }
}

libgcj32_package() {
        short_desc="GCC Java library (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libgcj*.so*"
                vmove "usr/lib32/libgij.so*"
                vmove usr/lib32/gcj-${version}-13
                vmove usr/lib32/logging.properties
                vmove usr/lib32/security/classpath.security
        }
}

libgomp32_package() {
        depends="libgcc32 glibc32"
        short_desc="GCC OpenMP v3.0 library (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libgomp.*"
        }
}

libitm32_package() {
        depends="libgcc32"
        short_desc="GCC Transactional Memory library (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libitm*"
        }
}

libmudflap32-devel_package() {
        depends="gcc-multilib glibc32-devel libmudflap32"
        short_desc="GCC mudflap libraries (32bit) - development files"
        pkg_install() {
                vmove "usr/lib32/libmudflap*.a"
        }
}

libmudflap32_package() {
        depends="gcc-multilib glibc32"
        short_desc="GCC mudflap libraries (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libmudflap*.so*"
        }
}

libobjc32_package() {
        depends="libgcc32 glibc32"
        short_desc="GCC Objective-C library (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libobjc.so*"
        }
}

libssp32_package() {
        depends="glibc32"
        short_desc="GCC SSP library (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libssp.so*"
        }
}

libstdc++32-devel_package() {
        depends="libstdc++-devel libstdc++32"
        short_desc="GCC Standard C++ Library (32bit) - development files"
        noverifyrdeps=yes
        pkg_install() {
                vmove usr/include/c++/${_majorver}/${_triplet}/32
        }
}

libstdc++32_package() {
        depends="libgcc32 glibc32 libstdc++"
        short_desc="GCC Standard C++ Library (32bit)"
        noverifyrdeps=yes
        pkg_install() {
                vmove "usr/lib32/libstdc++.so*"
        }
}
