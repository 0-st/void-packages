# Template build file for 'readline'.
pkgname=readline
_dist_ver=6.2
_patch_ver=002
version=${_dist_ver}.${_patch_ver}
revision=2
#version=${_dist_ver}
wrksrc=${pkgname}-${_dist_ver}
distfiles="http://ftp.gnu.org/gnu/readline/${pkgname}-${_dist_ver}.tar.gz"
build_style=gnu-configure
configure_args="--with-curses --enable-multibyte"
make_build_args="SHLIB_LIBS=-lncurses"
short_desc="The GNU Readline Library"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=79a696070a058c233c72dd6ac697021cc64abd5ed51e59db867d66d196a89381
long_desc="
 The GNU Readline library provides a set of functions for use by
 applications that allow users to edit command lines as they are
 typed in. Both Emacs and vi editing modes are available. The
 Readline library includes additional functions to maintain a list
 of previously-entered command lines, to recall and perhaps reedit
 those lines, and perform csh-like history expansion on previous
 commands."

subpackages="$pkgname-devel"
Add_dependency build ncurses-devel

pre_configure() {
	local url="http://ftp.gnu.org/gnu/$pkgname/$pkgname-${_dist_ver}-patches"

	if [ "${_patch_ver}" -gt 000 ]; then
		for p in $(seq -w 001 ${_patch_ver}); do
			cd ${XBPS_SRCDISTDIR} || return 1
			[ -f ${XBPS_SRCDISTDIR}/readline62-${p} ] && continue
			msg_normal " Fetching $url/readline62-$p ...\n"
			$XBPS_FETCH_CMD ${url}/readline62-$p
		done
	fi
	cd ${wrksrc}
	for p in $(seq -w 001 ${_patch_ver}); do
		patch -s -Np0 -i ${XBPS_SRCDISTDIR}/readline62-${p} && \
			msg_normal " Applying patch readline62-$p.\n"
	done
	sed -i 's|-Wl,-rpath,$(libdir) ||g' support/shobj-conf
}
