# Template build file for 'readline'.
pkgname=readline
_dist_ver=6.0
_patch_ver=004
version=${_dist_ver}.${_patch_ver}
wrksrc=${pkgname}-${_dist_ver}
distfiles="http://savory.googlecode.com/files/${pkgname}-${_dist_ver}.tar.gz"
build_style=gnu_configure
configure_args="--with-curses --enable-multibyte"
make_build_args="SHLIB_LIBS=-lncurses"
short_desc="The GNU Readline Library"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=1199d905c025735b34cf67d03078585e18f84707052413279fe68ce48c1cc1de
long_desc="
 The GNU Readline library provides a set of functions for use by
 applications that allow users to edit command lines as they are
 typed in. Both Emacs and vi editing modes are available. The
 Readline library includes additional functions to maintain a list
 of previously-entered command lines, to recall and perhaps reedit
 those lines, and perform csh-like history expansion on previous
 commands."

subpackages="$pkgname-devel"
Add_dependency full	glibc
Add_dependency build	ncurses
Add_dependency run	ncurses-libs
Add_dependency build	texinfo

pre_configure()
{
	local url="http://ftp.gnu.org/gnu/$pkgname/$pkgname-6.0-patches"

	if [ "${_patch_ver}" -gt 000 ]; then
		for p in $(seq -w 001 ${_patch_ver}); do
			cd ${XBPS_SRCDISTDIR} || return 1
			[ -f ${XBPS_SRCDISTDIR}/readline60-${p} ] && continue
			$XBPS_FETCH_CMD ${url}/readline60-$p
		done
	fi
	cd ${wrksrc}
	for p in $(seq -w 001 ${_patch_ver}); do
		patch -s -Np0 -i ${XBPS_SRCDISTDIR}/readline60-${p} && \
			msg_normal "Applying patch readline60-$p."
	done
	sed -i 's|-Wl,-rpath,$(libdir) ||g' support/shobj-conf
}

post_install()
{
	# Move shared libs to /.
	mkdir -p $DESTDIR/lib
	mv $DESTDIR/usr/lib/lib*.so.* $DESTDIR/lib
	rm -f ${DESTDIR}/usr/lib/lib*.so
}
