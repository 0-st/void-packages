# Template file for 'cyrus-sasl'
pkgname=cyrus-sasl
version=2.1.25
revision=1
short_desc="Cyrus SASL - auth daemon and administration tools"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://cyrusimap.web.cmu.edu/"
license="BSD"
distfiles="ftp://ftp.andrew.cmu.edu/pub/cyrus-mail/cyrus-sasl-$version.tar.gz"
checksum=418c16e6240a4f9b637cbe3d62937b9675627bad27c622191d47de8686fe24fe
long_desc="
 SASL is the Simple Authentication and Security Layer, a method for adding
 authentication support to connection-based protocols. To use SASL, a protocol
 includes a command for identifying and authenticating a user to a server and
 for optionally negotiating protection of subsequent protocol interactions.
 If its use is negotiated, a security layer is inserted between the protocol
 and the connection. See RFC 2222 for more information.

 Any of: ANONYMOUS, CRAM-MD5, DIGEST-MD5, GSSAPI (MIT or Heimdal Kerberos 5),
 NTLM, OTP, PLAIN, or LOGIN can be used. If you intend to use this package on a
 server that provides SASL authentication, then you must install some of the
 cyrus-sasl-modules* packages."

disable_parallel_build=yes

depends="libsasl>=${version}"

hostmakedepends="groff"

makedepends="openssl-devel db-devel libldap-devel mit-krb5-devel pam-devel
 postgresql-libs-devel libmysqlclient-devel>=5.5.27 sqlite-devel"

subpackages="${pkgname}-modules-ldap ${pkgname}-modules-sql
 ${pkgname}-modules-gssapi ${pkgname}-modules"

systemd_services="saslauthd.service on"

do_configure() {
	./configure ${CONFIGURE_SHARED_ARGS} --disable-static --enable-shared \
		--enable-alwaystrue --enable-checkapop --enable-cram \
		--enable-digest --disable-otp --disable-srp \
		--disable-srp-setpass --disable-krb4 --enable-gssapi \
		--enable-auth-sasldb --enable-plain --enable-anon \
		--enable-login --enable-ntlm --disable-passdss --enable-sql \
		--enable-ldapdb --disable-macos-framework --with-pam \
		--with-saslauthd=/var/run/saslauthd --with-ldap \
		--with-configdir=/etc/sasl2:/etc/sasl:/usr/lib/sasl2 \
		--with-devrandom=/dev/urandom LDFLAGS=-ldb
}

do_build() {
	make ${makejobs}
}

do_install() {
	make DESTDIR=${DESTDIR} install

	# Remove libsasl{,-devel} files.
	rm -rf ${DESTDIR}/usr/include
	rm -f ${DESTDIR}/usr/lib/libsasl*
	rm -rf ${DESTDIR}/usr/share/man/man3

	# systemd
	vinstall ${FILESDIR}/saslauthd.service 644 usr/lib/systemd/system
	vinstall ${FILESDIR}/saslauthd.tmpfiles.d 644 \
		usr/lib/tmpfiles.d saslauthd.conf

	vinstall COPYING 644 usr/share/licenses/${pkgname}
}
