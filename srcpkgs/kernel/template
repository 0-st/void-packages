# Template file for 'kernel'
pkgname=kernel
_kernel_ver=2.6.31
_kernel_patch_ver=6
version=${_kernel_ver}.${_kernel_patch_ver}
wrksrc="linux-$version"
distfiles="${KERNEL_SITE}/kernel/v2.6/linux-$version.tar.bz2"
build_style=custom-install
short_desc="The Linux kernel and associated stuff (2.6 branch)"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=7751de380eab755a647c7137949bc6207fd14379e5e8e5c15c421fdc8390c45e
long_desc="
 This package provides the linux kernel image and associated modules."

subpackages="$pkgname-firmware $pkgname-headers"
triggers="initramfs-tools"
essential=yes
nostrip=yes

Add_dependency full glibc
Add_dependency full dash
Add_dependency full coreutils
Add_dependency full module-init-tools
Add_dependency run initramfs-tools
Add_dependency run kernel-firmware ">=${_kernel_ver}"
Add_dependency build perl

do_install()
{
	# If there's a file called kernel-<arch>-dotconfig, use it to
	# configure the kernel; otherwise run the menuconfig target.
	local arch lver mjobs hdrdest

	if [ "$XBPS_MAKEJOBS" -gt 1 ]; then
		mjobs="-j $XBPS_MAKEJOBS"
	fi
	if [ "$xbps_machine" != "x86_64" ]; then
		arch=i386
	else
		arch=x86_64
	fi

	cd ${wrksrc} || return 1

	# Configure
	if [ -f ${FILESDIR}/$arch-dotconfig ]; then
		msg_normal "Detected a .config file for your arch, using it."
		cp -f ${FILESDIR}/$arch-dotconfig ${wrksrc}/.config
		make ${mjobs} oldconfig
	else
		make ${mjobs} menuconfig
	fi
	if [ -n "${revision}" ]; then
		sed -i -e "s|LOCALVERSION=\"\"|LOCALVERSION=\"_${revision}\"|" \
			${wrksrc}/.config
	fi
	# Build
	make ${mjobs} prepare
	make ${mjobs} bzImage modules || return 1

	# Install kernel, firmware and modules
	install -d ${DESTDIR}/lib ${DESTDIR}/boot
	make ${mjobs} INSTALL_MOD_PATH=${DESTDIR} modules_install || return 1
	if [ -n "$revision" ]; then
		lver="${version}_${revision}"
	else
		lver="${version}"
	fi

	hdrdest=${DESTDIR}/usr/src/kernel-headers-${lver}

	install -m 644 arch/x86/boot/bzImage ${DESTDIR}/boot/vmlinuz-${lver}
	install -m 644 System.map ${DESTDIR}/boot/System.map-${lver}
	install -m 644 .config ${DESTDIR}/boot/config-${lver}
	cd ${DESTDIR}/lib/modules/${lver} && \
		rm -f source build && \
		ln -sf ../../../usr/src/kernel-headers-${lver} build && \
		ln -sf build source

	# Install required headers to build external modules
	cd ${wrksrc} || return 1
	install -D -m644 Makefile ${hdrdest}/Makefile
	install -D -m644 kernel/Makefile ${hdrdest}/kernel/Makefile
	install -D -m644 .config ${hdrdest}/.config
	mkdir -p ${hdrdest}/include

	for i in acpi asm-generic asm-x86 config linux math-emu media net \
		pcmcia scsi sound trace video; do
		cp -a include/$i ${hdrdest}/include
	done

	mkdir -p ${hdrdest}/arch/x86
	cp -a arch/x86/include ${hdrdest}/arch/x86

	# Copy files necessary for later builds, like nvidia and vmware
	cp Module.symvers ${hdrdest}
	cp -a scripts ${hdrdest}

	# Fix permissions on scripts dir
	chmod og-w -R ${hdrdest}/scripts

	mkdir -p ${hdrdest}/arch/x86/kernel
	cp arch/x86/Makefile ${hdrdest}/arch/x86
	if [ "$arch" = "i386" ]; then
		cp arch/x86/Makefile_32.cpu ${hdrdest}/arch/x86
	fi
	cp arch/x86/kernel/asm-offsets.s ${hdrdest}/arch/x86/kernel

	# Add headers for lirc package
	mkdir -p ${hdrdest}/drivers/media/video
	cp drivers/media/video/*.h ${hdrdest}/drivers/media/video
	for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 \
		 sn9c102 usbvideo zc0301; do
		mkdir -p ${hdrdest}/drivers/media/video/$i
		cp -a drivers/media/video/$i/*.h \
			${hdrdest}/drivers/media/video/$i
	done

	# Add docbook makefile
	install -D -m644 Documentation/DocBook/Makefile \
		${hdrdest}/Documentation/DocBook/Makefile

	# Add md headers
	mkdir -p ${hdrdest}/drivers/md
	cp drivers/md/*.h ${hdrdest}/drivers/md

	# Add inotify.h
	mkdir -p ${hdrdest}/include/linux
	cp include/linux/inotify.h ${hdrdest}/include/linux

	# Add wireless headers
	mkdir -p ${hdrdest}/net/mac80211/
	cp net/mac80211/*.h ${hdrdest}/net/mac80211

	# Add dvb headers for external modules in reference to:
	# http://bugs.archlinux.org/task/9912
	mkdir -p ${hdrdest}/drivers/media/dvb/dvb-core
	cp drivers/media/dvb/dvb-core/*.h ${hdrdest}/drivers/media/dvb/dvb-core

	# Add dvb headers for external modules in reference to:
	# http://bugs.archlinux.org/task/11194
	mkdir -p ${hdrdest}/include/config/dvb
	cp include/config/dvb/*.h ${hdrdest}/include/config/dvb

	# Add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
	# in reference to:
	# http://bugs.archlinux.org/task/13146
	mkdir -p ${hdrdest}/drivers/media/dvb/frontends
	cp drivers/media/dvb/frontends/lgdt330x.h \
		${hdrdest}/drivers/media/dvb/frontends
	cp drivers/media/video/msp3400-driver.h \
		${hdrdest}/drivers/media/dvb/frontends

	# Add xfs and shmem for aufs building
	mkdir -p ${hdrdest}/fs/xfs
	mkdir -p ${hdrdest}/mm
	cp fs/xfs/xfs_sb.h ${hdrdest}/fs/xfs/xfs_sb.h

	# Add headers vor virtualbox in reference to:
	# http://bugs.archlinux.org/task/14568
	cp -a include/drm ${hdrdest}/include

	# Add headers for broadcom wl in reference to:
	# http://bugs.archlinux.org/task/14568
	cp -a include/trace ${hdrdest}/include

	# Add vmlinux
	cp vmlinux ${hdrdest}

	# Copy in Kconfig files
	for i in `find . -name "Kconfig*"`; do
		mkdir -p ${hdrdest}/`echo $i | sed 's|/Kconfig.*||'`
		cp $i ${hdrdest}/$i
	done
	cd ${hdrdest}/include && ln -s asm-x86 asm

	# Remove unneeded architectures
	for arch in alpha arm* avr32 blackfin cris frv h8300 \
		ia64 m* p* s* um v850 xtensa; do
		rm -rf ${hdrdest}/${arch}
	done
}
