# Template build file for 'gcc'
# 
# NOTE: don't forget to sync with gcc-multilib when this package is updated.
pkgname=gcc
version=4.6.0
distfiles="http://ftp.gnu.org/pub/gnu/gcc/gcc-$version/gcc-$version.tar.bz2"
build_style=custom-install
short_desc="The GNU C Compiler"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=23bd0013d76ac6fb4537e5e8f4e5947129362dcc32f0d08563b7d4d9e44c0e17
long_desc="
 The GNU C Compiler, with support for building C code.
 
 For C++ install gcc-c++, for ObjectiveC install gcc-objc,
 for ObjectiveC++ install gcc-objc++."

base_chroot=yes
subpackages="libgcc libssp libssp-devel libstdc++ libstdc++-devel libgomp"
subpackages="${subpackages} libmudflap libmudflap-devel libobjc libobjc-devel"
subpackages="${subpackages} gcc-c++ gcc-objc gcc-objc++"

Add_dependency run libgcc		">=${version}"
Add_dependency run glibc
Add_dependency run zlib
Add_dependency run libgomp		">=${version}"
Add_dependency run gmp
Add_dependency run mpfr
Add_dependency run mpc
Add_dependency run binutils
Add_dependency run ppl
Add_dependency run cloog-ppl
Add_dependency run libelf
Add_dependency run libssp-devel		">=${version}"
Add_dependency run glibc-devel

Add_dependency build gmp-devel
Add_dependency build mpfr-devel
Add_dependency build mpc-devel
Add_dependency build binutils-devel
Add_dependency build cloog-ppl-devel
Add_dependency build libelf-devel

do_build()
{
	# As specified in the LFS book, disable installing libiberty.
	sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in
	# "Add" ppl-0.11 compatibility
	sed -i "/ppl_minor_version=/s#10#11#" configure
	# Do not run fixincludes
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	./configure --prefix=/usr \
		--enable-clocale=gnu --disable-bootstrap \
		--enable-threads=posix --enable-__cxa_atexit --disable-multilib \
		--enable-languages=c,c++,objc,obj-c++ --enable-tls \
		--with-mpfr=$XBPS_MASTERDIR/usr --with-gmp=$XBPS_MASTERDIR/usr \
		--disable-rpath --with-system-zlib --enable-shared \
		--with-ppl=${XBPS_MASTERDIR}/usr --with-cloog=${XBPS_MASTERDIR}/usr \
		--enable-lto --with-libelf=${XBPS_MASTERDIR}/usr

	make ${makejobs}
}

do_install()
{
	if [ "$xbps_machine" = "x86_64" ]; then
		mkdir -p ${SRCPKGDESTDIR}/usr/lib
		cd ${SRCPKGDESTDIR}/usr && ln -s lib lib64 && cd ${wrksrc}
	fi

	make DESTDIR=${DESTDIR} install

	cd ${DESTDIR}/usr/bin && ln -sf gcc cc
	#
	# rpcgen wants /lib/cpp, make a symlink.
	#
	mkdir -p ${DESTDIR}/lib
	cd ${DESTDIR}/lib && ln -sf ../usr/bin/cpp .
	rm -f ${DESTDIR}/usr/lib64

	# Remove all python scripts in libdir.
	rm -f ${DESTDIR}/usr/lib/*.py

	# Remove more python stuff.
	if [ -d ${DESTDIR}/usr/share/gcc-${version}/python ]; then
		rm -rf ${DESTDIR}/usr/share/gcc-${version}/python
	fi

	# Install c89 and c99 wrappers and its manpages, from NetBSD.
	for f in c89 c99; do
		install -m755 ${FILESDIR}/${f}.sh ${DESTDIR}/usr/bin/${f}
	done
	install -m644 ${FILESDIR}/*.1 ${DESTDIR}/usr/share/man/man1
}
