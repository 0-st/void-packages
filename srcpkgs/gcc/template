# Template build file for 'gcc'
# 
# NOTE: don't forget to sync with gcc-multilib when this package is updated.
pkgname=gcc
_majorver=4.6
version=${_majorver}.2
distfiles="http://ftp.gnu.org/pub/gnu/gcc/gcc-$version/gcc-$version.tar.bz2"
revision=3
short_desc="The GNU C Compiler"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://gcc.gnu.org"
license="GFDL-1.2, GPL-3, LGPL-2.1"
checksum=60b05463dfe18d40d68fb8a71b25b408a01f86cc6ceaf5e6b22238b6b0f450c2
long_desc="
 The GNU C Compiler, with support for building C code.
 
 For C++ install gcc-c++, for ObjectiveC install gcc-objc,
 for ObjectiveC++ install gcc-objc++, for Go install gcc-go,
 for Fortran install gcc-fortran."

subpackages="libgcc libgo libssp libssp-devel libstdc++ libstdc++-devel libgomp"
subpackages="${subpackages} libquadmath libquadmath-devel libgo-devel libgomp-devel"
subpackages="${subpackages} libmudflap libmudflap-devel libobjc libobjc-devel"
subpackages="${subpackages} libgfortran libgfortran-devel gcc-fortran"
subpackages="${subpackages} gcc-c++ gcc-objc gcc-objc++ gcc-go"

Add_dependency run libgcc		">=${version}"
Add_dependency run libgomp		">=${version}"
Add_dependency run binutils
Add_dependency run libelf
Add_dependency run libssp-devel		">=${version}"

Add_dependency build gmp-devel
Add_dependency build mpfr-devel
Add_dependency build mpc-devel
Add_dependency build binutils-devel
Add_dependency build cloog-ppl-devel
Add_dependency build libelf-devel

if [ "${XBPS_MACHINE}" = "x86_64" ]; then
	_triplet="${XBPS_MACHINE}-unknown-linux-gnu"
else
	_triplet="${XBPS_MACHINE}-pc-linux-gnu"
fi

do_configure() {
	# As specified in the LFS book, disable installing libiberty.
	sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in
	# Do not run fixincludes
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	CONFIG_SHELL=/bin/bash ./configure --libexecdir=/usr/lib \
		--enable-clocale=gnu --disable-bootstrap --libdir=/usr/lib \
		--enable-threads=posix --enable-__cxa_atexit --disable-multilib \
		--enable-languages=c,c++,objc,obj-c++,fortran,go,lto --enable-tls \
		--with-mpfr=$XBPS_MASTERDIR/usr --with-gmp=$XBPS_MASTERDIR/usr \
		--disable-rpath --with-system-zlib --enable-shared \
		--with-ppl=${XBPS_MASTERDIR}/usr --with-cloog=${XBPS_MASTERDIR}/usr \
		--enable-lto --with-libelf=${XBPS_MASTERDIR}/usr \
		--enable-linker-build-id --enable-gnu-unique-object \
		--enable-checking=release ${CONFIGURE_SHARED_ARGS}
}

do_build() {
	make ${makejobs}
}

do_install() {
	if [ "$XBPS_MACHINE" = "x86_64" ]; then
		vmkdir usr/lib
		cd ${DESTDIR}/usr && ln -sf lib lib64 && cd ${wrksrc}
	fi
	make DESTDIR=${DESTDIR} install

	# Make version a symlink of major version to make all versions
	# from the same series work automagically.
	mv ${DESTDIR}/usr/lib/gcc/${_triplet}/${version} \
		${DESTDIR}/usr/lib/gcc/${_triplet}/${_majorver}
	ln -sf /usr/lib/gcc/${_triplet}/${_majorver} \
		${DESTDIR}/usr/lib/gcc/${_triplet}/${version}

	# Ditto for c++ headers.
	mv ${DESTDIR}/usr/include/c++/${version} \
		${DESTDIR}/usr/include/c++/${_majorver}
	ln -sf /usr/include/c++/${_majorver} \
		${DESTDIR}/usr/include/c++/${version}

	# cc symlink.
	ln -sf /usr/bin/gcc ${DESTDIR}/usr/bin/cc
	# rpcgen wants /lib/cpp, make a symlink.
	vmkdir lib
	ln -sf /usr/bin/cpp ${DESTDIR}/lib/cpp
	rm -f ${DESTDIR}/usr/lib64

	# Remove libffi stuff.
	rm -f ${DESTDIR}/usr/lib/libffi*
	rm -f ${DESTDIR}/usr/share/man/man3/ffi*

	# Remove all python scripts in libdir.
	rm -f ${DESTDIR}/usr/lib/*.py

	# Remove more python stuff.
	if [ -d ${DESTDIR}/usr/share/gcc-${version}/python ]; then
		rm -rf ${DESTDIR}/usr/share/gcc-${version}/python
	fi

	# Install c89 and c99 wrappers and its manpages, from NetBSD.
	for f in c89 c99; do
		vinstall ${FILESDIR}/${f}.sh 755 usr/bin ${f}
		vinstall ${FILESDIR}/${f}.1 644 usr/share/man/man1 ${f}.1
	done
}
