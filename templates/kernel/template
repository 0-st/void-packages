# Template file for 'kernel'
pkgname=kernel
version=2.6.30
wrksrc="linux-$version"
distfiles="${KERNEL_SITE}/kernel/v2.6/linux-$version.tar.bz2"
build_style=gnu_makefile
make_build_target="bzImage modules"
make_install_target="modules_install
 INSTALL_MOD_PATH=${XBPS_DESTDIR}/${pkgname}-${version}"
short_desc="The Linux kernel and associated stuff (2.6 branch)"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=d7b9f19b92fd5c693c16cd62f441d051b699f28ec6a175d1b464e58bacd8c78f
long_desc="
 This package provides the linux kernel image, kernel modules
 and firmware files."

triggers="initramfs-tools"

Add_dependency full glibc
Add_dependency full dash
Add_dependency full coreutils
Add_dependency full module-init-tools
Add_dependency full initramfs-tools
Add_dependency build perl

pre_build()
{
	# If there's a file called kernel-<arch>-dotconfig, use it to
	# configure the kernel; otherwise run the menuconfig target.
	local arch=

	if [ "$xbps_machine" != "x86_64" ]; then
		arch=i386
	else
		arch=x86_64
	fi

	if [ -f $XBPS_TEMPLATESDIR/$pkgname/$arch-dotconfig ]; then
		msg_normal "Detected a .config file for your arch, using it."
		cp -f $XBPS_TEMPLATESDIR/$pkgname/$arch-dotconfig \
			$wrksrc/.config
        	make oldconfig
	else
        	make menuconfig
	fi
	if [ -n "${revision}" ]; then
		sed -i -e "s|LOCALVERSION=\"\"|LOCALVERSION=\"_${revision}\"|" \
			${wrksrc}/.config
	fi
}

post_install()
{
	local lver

	install -d ${DESTDIR}/lib ${DESTDIR}/boot
	cd $wrksrc || exit 1

	if [ -n "$revision" ]; then
		lver="${version}_${revision}"
	else
		lver="${version}"
	fi

	install -m 644 arch/x86/boot/bzImage ${DESTDIR}/boot/vmlinuz-${lver}
	install -m 644 System.map ${DESTDIR}/boot/System.map-${lver}
	install -m 644 .config ${DESTDIR}/boot/config-${lver}

	cd ${DESTDIR}/lib/modules/${lver} && \
		rm -f source build && \
		ln -sf ../../../usr/src/kernel-headers-${lver} build && \
		ln -sf build source

	if [ -n "$revision" ]; then
		mkdir -p ${DESTDIR}/lib/firmware/${lver}
		mv ${DESTDIR}/lib/firmware/* ${DESTDIR}/lib/firmware/${lver}
	fi
}
