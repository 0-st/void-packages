# Template file for 'docbook-xml'
pkgname=docbook-xsl
version=1.74.3
distfiles="${SOURCEFORGE_SITE}/docbook/$pkgname-$version.tar.bz2"
build_style=custom-install
short_desc="Docbook XSL modular stylesheet"
maintainer="Juan RP <xtraeme@gmail.com>"
checksum=d96e475e8a3b47e8d8bebfef6f90c7bb5c0148d9e245d8323a6d34c3c2ca3034
long_desc="
 The DocBook XSL stylesheets provide a serie of ready-to-use templates to
 process documents based on the DocBook XML DTD. They can generate different
 types of output files, like XHTML, slides, manpages, JavaDoc...

 They are written in a modular fashion. Each of the HTML and FO stylesheets
 starts with a driver file that assembles a collection of component files
 into a complete stylesheet. This modular design puts similar things together
 into smaller files that are easier to write and maintain than one big
 stylesheet."

noarch=yes
triggers="xml-catalog"

Add_dependency full xmlcatmgr
Add_dependency full docbook-xml 4.2

xml_catalogs="/usr/share/xsl/docbook/catalog.xml"

do_install()
{
	local xslmods="common eclipse epub fo highlighting html htmlhelp \
			images javahelp lib manpages params profiling \
			roundtrip slides website xhtml xhtml-1_1"

	cd $wrksrc
	install -D -m644 catalog.xml \
		${DESTDIR}/usr/share/xsl/docbook/catalog.xml
	install -m644 VERSION ${DESTDIR}/usr/share/xsl/docbook
	for dir in ${xslmods}; do
		install -d ${DESTDIR}/usr/share/xsl/docbook/${dir}
		cp -a ${dir}/* ${DESTDIR}/usr/share/xsl/docbook/${dir}/
	done
}

post_install()
{
	#
	# Run the trigger to register its XML catalog entries.
	#
	export xml_entries="nextCatalog ${xml_catalogs} --"
	cd ${XBPS_MASTERDIR}
	${XBPS_TRIGGERSDIR}/xml-catalog run post-install
	unset xml_entries
}
